{
    "docs": [
        {
            "location": "/",
            "text": "The quickest & easiest way to view extensibility logs!\n\n\n\n\n\n\n\n\n\n\n\n\nYou can download this extension \nfrom the Visual Studio Marketplace\n\n\n\n\nSave Time and Hassle\n\u00b6\n\n\nSave yourself the hassle of trying to remember where the various extensibility-related log files are located. Once you've managed to find the file you're looking for, you still have to manually load it in your text editor of choice.\n\n\nThis extension adds a new toolbar that adds command buttons for a set of helpful extensibility-related logs, giving you a one-click experience to open the selected log file in a document tab in Visual Studio.\n\n\nMore Information\n\u00b6\n\n\nYou can read more about \nExtensibility Logs\n on its website:\n\n\nDescription\n | \nGetting Started\n | \nFeatures\n | \nChangelog\n | \nRoadmap\n\n\nSupport the Project\n\u00b6\n\n\nIf \nExtensibility Logs\n has saved you time and hassle, please come back and show your support:\n\n\n\n\nyou could \nrate \nExtensibility Logs\n (only takes a couple of seconds)\n\n\nor \nreview \nExtensibility Logs\n (help others benefit from your experience)\n\n\nor \nshout me a coke\n (I don't drink coffee or beer lol)",
            "title": "Overview"
        },
        {
            "location": "/#save-time-and-hassle",
            "text": "Save yourself the hassle of trying to remember where the various extensibility-related log files are located. Once you've managed to find the file you're looking for, you still have to manually load it in your text editor of choice.  This extension adds a new toolbar that adds command buttons for a set of helpful extensibility-related logs, giving you a one-click experience to open the selected log file in a document tab in Visual Studio.",
            "title": "Save Time and Hassle"
        },
        {
            "location": "/#more-information",
            "text": "You can read more about  Extensibility Logs  on its website:  Description  |  Getting Started  |  Features  |  Changelog  |  Roadmap",
            "title": "More Information"
        },
        {
            "location": "/#support-the-project",
            "text": "If  Extensibility Logs  has saved you time and hassle, please come back and show your support:   you could  rate  Extensibility Logs  (only takes a couple of seconds)  or  review  Extensibility Logs  (help others benefit from your experience)  or  shout me a coke  (I don't drink coffee or beer lol)",
            "title": "Support the Project"
        },
        {
            "location": "/getting-started/",
            "text": "Getting Started\n\u00b6\n\n\nThere are three ways you can install \nExtensibility Logs\n:\n\n\n\n\nFrom Inside Visual Studio\n\n\nDownload and Install Manually\n\n\nFrom the \nsource code\n\n\n\n\nOption 1 - From Inside Visual Studio\n\u00b6\n\n\n\n\nIn Visual Studio open the \nExtensions\n dialog\n\n\nVS 2017: \nExtensions and Updates\n\n\nVS 2019: \nManage Extensions\n \n\n\nClick on the \nOnline\n tab\n\n\nType \nextensibility logs\n in the search box\n\n\nClick on \nExtensibility Logs\n in the list\n\n\nClick the \nDownload\n button\n\n\n\n\nOption 2 - Download and Install Manually\n\u00b6\n\n\n\n\nClick on this link to download from \nVisual Studio Marketplace website\n\n\nClick the \nDownload\n button, and select where to save it\n\n\nInstall the downloaded VSIX file, from wherever you saved it\n\n\n\n\nOption 3 - From the Source Code\n\u00b6\n\n\n\n\nFind the \nsource code\n on GitHub\n\n\nFork it or clone it\n\n\nCompile the solution\n\n\nInstall the compiled VSIX file",
            "title": "Getting Started"
        },
        {
            "location": "/getting-started/#getting-started",
            "text": "There are three ways you can install  Extensibility Logs :   From Inside Visual Studio  Download and Install Manually  From the  source code",
            "title": "Getting Started"
        },
        {
            "location": "/getting-started/#option-1-from-inside-visual-studio",
            "text": "In Visual Studio open the  Extensions  dialog  VS 2017:  Extensions and Updates  VS 2019:  Manage Extensions    Click on the  Online  tab  Type  extensibility logs  in the search box  Click on  Extensibility Logs  in the list  Click the  Download  button",
            "title": "Option 1 - From Inside Visual Studio"
        },
        {
            "location": "/getting-started/#option-2-download-and-install-manually",
            "text": "Click on this link to download from  Visual Studio Marketplace website  Click the  Download  button, and select where to save it  Install the downloaded VSIX file, from wherever you saved it",
            "title": "Option 2 - Download and Install Manually"
        },
        {
            "location": "/getting-started/#option-3-from-the-source-code",
            "text": "Find the  source code  on GitHub  Fork it or clone it  Compile the solution  Install the compiled VSIX file",
            "title": "Option 3 - From the Source Code"
        },
        {
            "location": "/features/",
            "text": "Extensibility Logs Enabled Setting\n\u00b6\n\n\nThis setting allows the whole set of \nExtensibility Logs\n features to be turned off together.\n\n\nExtensibility Logs Version\n\u00b6\n\n\nDisplays the currently installed \nExtensibility Logs\n version.\n\n\nActivity Log\n\u00b6\n\n\nOpens Visual Studio's \nActivity Log\n in a tab document, without having to first remember where the file is stored,\nand then open it in your editor of choice.\n\n\nThe \nActivity Log\n feature can be disabled by setting \nTools | Options | Extensibility Logs |  Enable Activity Log\n\nto \nfalse\n, or hidden by removing the button from the \nExtensibility Logs\n toolbar.\n\n\nDiagnostic Failure Log\n\u00b6\n\n\nOpens MSBuild's latest \nDiagnostic Failure Log\n in a tab document, without knowing how to find it first, \nand then open it in your editor of choice.\n\n\nThe \nDiagnostic Failure Log\n feature can be disabled by setting \nTools | Options | Extensibility Logs | Enable Diagnostic Log\n to \nfalse\n, \nor hidden by removing the button from the \nExtensibility Logs\n toolbar.\n\n\nMEF Error Log\n\u00b6\n\n\nOpens Visual Studio's \nMEF Error Log\n in a tab document, without having to search for it,\nand then open it in your editor of choice.\n\n\nThe \nMEF Error Log\n feature can be disabled by setting \nTools | Options | Extensibility Logs | Enable MEF Error Log\n to \nfalse\n, \nor hidden by removing the button from the \nExtensibility Logs\n toolbar.\n\n\nPath Variables\n\u00b6\n\n\nDisplays Windows' current \nsearch paths for executable files\n in a tab document, without having to open a command prompt.\n\n\nA future update will allow adding, removing, and re-ordering of the variables, inside , \nwithout having to use Windows' \nSettings\n app.\n\n\nThe \nPath Variables\n feature can be disabled by setting \nTools | Options | Extensibility Logs | Enable Path Variables\n to \nfalse\n, \nor hidden by removing the button from the \nExtensibility Logs\n toolbar.",
            "title": "Features"
        },
        {
            "location": "/features/#extensibility-logs-enabled-setting",
            "text": "This setting allows the whole set of  Extensibility Logs  features to be turned off together.",
            "title": "Extensibility Logs Enabled Setting"
        },
        {
            "location": "/features/#extensibility-logs-version",
            "text": "Displays the currently installed  Extensibility Logs  version.",
            "title": "Extensibility Logs Version"
        },
        {
            "location": "/features/#activity-log",
            "text": "Opens Visual Studio's  Activity Log  in a tab document, without having to first remember where the file is stored,\nand then open it in your editor of choice.  The  Activity Log  feature can be disabled by setting  Tools | Options | Extensibility Logs |  Enable Activity Log \nto  false , or hidden by removing the button from the  Extensibility Logs  toolbar.",
            "title": "Activity Log"
        },
        {
            "location": "/features/#diagnostic-failure-log",
            "text": "Opens MSBuild's latest  Diagnostic Failure Log  in a tab document, without knowing how to find it first, \nand then open it in your editor of choice.  The  Diagnostic Failure Log  feature can be disabled by setting  Tools | Options | Extensibility Logs | Enable Diagnostic Log  to  false , \nor hidden by removing the button from the  Extensibility Logs  toolbar.",
            "title": "Diagnostic Failure Log"
        },
        {
            "location": "/features/#mef-error-log",
            "text": "Opens Visual Studio's  MEF Error Log  in a tab document, without having to search for it,\nand then open it in your editor of choice.  The  MEF Error Log  feature can be disabled by setting  Tools | Options | Extensibility Logs | Enable MEF Error Log  to  false , \nor hidden by removing the button from the  Extensibility Logs  toolbar.",
            "title": "MEF Error Log"
        },
        {
            "location": "/features/#path-variables",
            "text": "Displays Windows' current  search paths for executable files  in a tab document, without having to open a command prompt.  A future update will allow adding, removing, and re-ordering of the variables, inside , \nwithout having to use Windows'  Settings  app.  The  Path Variables  feature can be disabled by setting  Tools | Options | Extensibility Logs | Enable Path Variables  to  false , \nor hidden by removing the button from the  Extensibility Logs  toolbar.",
            "title": "Path Variables"
        },
        {
            "location": "/changelog/",
            "text": "Public Releases\n\u00b6\n\n\nv1.1 - 2019-04-02\n\u00b6\n\n\n\n\nadded 'MEF Error Log'\n\n\nadded 'Path Variables'\n\n\n\n\nv1.0 - 2019-03-30\n\u00b6\n\n\n\n\nadded 'Extensibility Logs Enabled' option setting\n\n\nadded 'Extensibility Logs Version' option setting\n\n\nadded 'Activity Log'\n\n\nadded 'Diagnostic Log'\n\n\n\n\nInternal Releases\n\u00b6\n\n\nv0.1.1 - 2019-02-08\n\u00b6\n\n\n\n\nadded documentation\n\n\n\n\nv0.1 - 2019-02-03\n\u00b6\n\n\n\n\ninitial \nmaster\n branch on GitHub",
            "title": "Changelog"
        },
        {
            "location": "/changelog/#public-releases",
            "text": "",
            "title": "Public Releases"
        },
        {
            "location": "/changelog/#v11-2019-04-02",
            "text": "added 'MEF Error Log'  added 'Path Variables'",
            "title": "v1.1 - 2019-04-02"
        },
        {
            "location": "/changelog/#v10-2019-03-30",
            "text": "added 'Extensibility Logs Enabled' option setting  added 'Extensibility Logs Version' option setting  added 'Activity Log'  added 'Diagnostic Log'",
            "title": "v1.0 - 2019-03-30"
        },
        {
            "location": "/changelog/#internal-releases",
            "text": "",
            "title": "Internal Releases"
        },
        {
            "location": "/changelog/#v011-2019-02-08",
            "text": "added documentation",
            "title": "v0.1.1 - 2019-02-08"
        },
        {
            "location": "/changelog/#v01-2019-02-03",
            "text": "initial  master  branch on GitHub",
            "title": "v0.1 - 2019-02-03"
        },
        {
            "location": "/roadmap/",
            "text": "Feature Ideas\n\u00b6\n\n\nThe list below is a list of \npotential\n \nfeatures\n or \nenhancements\n.\nThese might be entirely \nnew features\n or \nenhancements\n to existing features.\n\n\nThey may, or may not, end up being added into \nExtensibility Logs\n.\n\n\n\n\n Activity Log\n\n\n Diagnostic Log\n\n\n Path Variables\n\n\n VSIX Installer Log\n\n\n MEF Error Log\n\n\n Service Hub Log\n\n\n\n\nContributions\n\u00b6\n\n\nIf you'd like to implement one of the \nfeature ideas\n,\nfeel free to \nopen an \nIssue\n on GitHub\n (with the same name as the feature),\nand we can start a discussion there.\n\n\nWe can then work toward developing a pull request,\nso the your feature can be incorporated into \nExtensibility Logs\n.\n\n\nDon't forget to check out the \nContribution Guidelines\n.\n\n\nBug Fixes\n\u00b6\n\n\nOnce bug fixes have been fully tested, they'll be included in the \nnext public release\n.\n\n\n\n\nThere are no bug fixes that need testing at the moment",
            "title": "Roadmap"
        },
        {
            "location": "/roadmap/#feature-ideas",
            "text": "The list below is a list of  potential   features  or  enhancements .\nThese might be entirely  new features  or  enhancements  to existing features.  They may, or may not, end up being added into  Extensibility Logs .    Activity Log   Diagnostic Log   Path Variables   VSIX Installer Log   MEF Error Log   Service Hub Log",
            "title": "Feature Ideas"
        },
        {
            "location": "/roadmap/#contributions",
            "text": "If you'd like to implement one of the  feature ideas ,\nfeel free to  open an  Issue  on GitHub  (with the same name as the feature),\nand we can start a discussion there.  We can then work toward developing a pull request,\nso the your feature can be incorporated into  Extensibility Logs .  Don't forget to check out the  Contribution Guidelines .",
            "title": "Contributions"
        },
        {
            "location": "/roadmap/#bug-fixes",
            "text": "Once bug fixes have been fully tested, they'll be included in the  next public release .   There are no bug fixes that need testing at the moment",
            "title": "Bug Fixes"
        }
    ]
}